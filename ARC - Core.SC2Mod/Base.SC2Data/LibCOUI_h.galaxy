include "LibCOOC_h"

//--------------------------------------------------------------------------------------------------
// Library: UI (COOP)
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCOUI_ge_SingularBossBarStyle_BossEnemy = 0;
const int libCOUI_ge_SingularBossBarStyle_Objective = 1;
const int libCOUI_ge_CampaignHeroes_None = 0;
const int libCOUI_ge_CampaignHeroes_Artanis = 1;
const int libCOUI_ge_CampaignHeroes_Kerrigan = 2;
const int libCOUI_ge_CampaignHeroes_Zagara = 3;
const int libCOUI_ge_CampaignHeroes_LaserDrill = 4;
const int libCOUI_ge_CampaignHeroes_Hyperion = 5;
const int libCOUI_ge_CampaignHeroes_KerriganReviveCocoon = 6;
const int libCOUI_ge_CampaignHeroes_ZagaraReviveCocoon = 7;
const int libCOUI_ge_CampaignHeroes_Nova = 8;
const int libCOUI_ge_CampaignHeroes_Alarak = 9;
const int libCOUI_ge_CampaignHeroes_NovaReviveBeacon = 10;
const int libCOUI_ge_CampaignHeroes_AlarakReviveBeacon = 11;
const int libCOUI_ge_CampaignHeroes_Fenix = 12;
const int libCOUI_ge_CampaignHeroes_FenixDragoon = 13;
const int libCOUI_ge_CampaignHeroes_FenixArbiter = 14;
const int libCOUI_ge_CampaignHeroes_Selendis = 15;
const int libCOUI_ge_CampaignHeroes_Colarion = 16;
const int libCOUI_ge_CampaignHeroes_Megalith = 17;
const int libCOUI_ge_CampaignHeroes_Dehaka = 18;
const int libCOUI_ge_CampaignHeroes_DehakasDen = 19;
const int libCOUI_ge_CampaignHeroes_ArtifactTruck = 20;
const int libCOUI_ge_CampaignHeroes_Tychus = 21;
const int libCOUI_ge_CampaignHeroes_TychusReviveBeacon = 22;
const int libCOUI_ge_CampaignHeroes_Zeratul = 23;
const int libCOUI_ge_CampaignHeroes_ZeratulReviveBeacon = 24;
const int libCOUI_ge_CampaignHeroes_Gary = 25;
const int libCOUI_ge_CampaignHeroes_SuperGary = 26;
const int libCOUI_ge_CampaignHeroes_GaryReviveBeacon = 27;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_Dialog = 0;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_Panel = 1;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_Label = 2;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_Value = 3;
const int libCOUI_ge_CU_ProgressBarUnit_DialogTypesOld_ProgressBar_ProgressBar = 4;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_MinValue = 0;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_CurValue = 1;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_MaxValue = 2;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_OffsetX = 3;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_OffsetY = 4;
const int libCOUI_ge_CU_ProgressBarUnitStoredValuesOld_Attachment = 5;
const int libCOUI_ge_CU_UnitProgressBarDataName_MinValue = 0;
const int libCOUI_ge_CU_UnitProgressBarDataName_CurValue = 1;
const int libCOUI_ge_CU_UnitProgressBarDataName_MaxValue = 2;
const int libCOUI_ge_CU_UnitProgressBarDataName_DisplayValue = 3;
const int libCOUI_ge_CU_UnitProgressBar_DialogTypes_ProgressBar_Label = 0;
const int libCOUI_ge_CU_UnitProgressBar_DialogTypes_ProgressBar_Value = 1;
const int libCOUI_ge_CU_UnitProgressBar_DialogTypes_ProgressBar_Bar = 2;
const int libCOUI_ge_CU_UnitProgressBar_DialogTypes_ProgressBar_Broder = 3;

// Constants
const fixed libCOUI_gv_cURRENT_VERSION = 0.0711;
const int libCOUI_gv_mAX_FACTIONS = 23;
const int libCOUI_gv_vU_MAXMUTATORSSELECTED = 24;
const int libCOUI_gv_vU_MAXMAPOPTIONS = 10;
const int libCOUI_gv_cUC_COMMSELECTMAX = 36;
const int libCOUI_gv_cUC_ABILITIESMAXCOUNT = 8;
const int libCOUI_gv_cUC_UNITSMAXCOUNT = 24;
const int libCOUI_gv_cUC_COMMUPGRADETIERCOUNT = 15;
const string libCOUI_gv_cUC_CommChoiceEventClosed = "CU_CommChoiceEventClosed";
const fixed libCOUI_gv_cUC_BB_HPBarWidth = 289.0;
const int libCOUI_gv_cUC_BB_HPBarHeight = 30;
const fixed libCOUI_gv_cUC_HeroUpdateFrequency = 0.25;
const int libCOUI_gv_cUC_HeroMaxCount = 2;
const int libCOUI_gv_cUC_HEROUILIFEBARHEIGHT = 20;
const int libCOUI_gv_cUC_HEROUISHIELDBARHEIGHT = 8;
const int libCOUI_gv_cUC_HEROUIENERGYBARHEIGHT = 8;
const int libCOUI_gv_cUC_HEROUIBARWIDTH = 200;
const fixed libCOUI_gv_pUC_HealthWatchThreshold = 0.4;
const int libCOUI_gv_cUC_WAVETIMERWINDOWMAX = 3;
const int libCOUI_gv_cUC_WAVETIMERUNITMAX = 3;
const string libCOUI_gv_cUC_ScoreEventClosed = "CU_ScoreEventClosed";
const string libCOUI_gv_cUC_ScoreParameterPlayer = "CU_ScoreParamPlayer";

// Structures
struct libCOUI_gs_CommanderOption {
    int lv_button;
    int lv_portrait;
    int lv_title;
    int lv_selection;
    int lv_lock;
    int lv_ready;
};

struct libCOUI_gs_UnitIcon {
    int lv_button;
    int lv_icon;
    int lv_title;
    int lv_description;
};

// Variable Declarations
text libCOUI_gv_wEBSITE;
text libCOUI_gv_aNNOUNCE_MESSAGE;
bool libCOUI_gv_nEWCOMER;
int libCOUI_gv_dialog;
int libCOUI_gv_startMissionDialogButton;
int libCOUI_gv_selectMissionDialog;
int libCOUI_gv_selectMissionDialogBig;
int libCOUI_gv_selectMissionPulldownDialog;
int libCOUI_gv_totalMaps;
int[51] libCOUI_gv_mapSlots;
string[51] libCOUI_gv_mapFiles;
text[51] libCOUI_gv_mapNames;
int[51] libCOUI_gv_missionButton;
int[51] libCOUI_gv_missionImage;
int[51] libCOUI_gv_missionText;
int[51] libCOUI_gv_mapBorder;
int[16] libCOUI_gv_selected;
int libCOUI_gv_missionsButton;
int libCOUI_gv_amonFactionsDialog;
int libCOUI_gv_totalFactions;
int[libCOUI_gv_mAX_FACTIONS + 1] libCOUI_gv_raceButton;
string[libCOUI_gv_mAX_FACTIONS + 1] libCOUI_gv_raceFaction;
int libCOUI_gv_cC_WorldCoverDlg;
text libCOUI_gv_aF_CS_News;
int[2] libCOUI_gv_aF_CS_CutsceneDialog;
int libCOUI_gv_aF_CS_CommanderMiraDialog;
int[3] libCOUI_gv_aF_CS_CommanderCutscenes;
string[3] libCOUI_gv_aF_CS_LastActiveCommander;
int libCOUI_gv_aF_CS_NewsDialog;
int libCOUI_gv_aF_CS_PatchDialog;
int libCOUI_gv_aF_CS_NewsControlButton;
bool libCOUI_gv_aF_CS_NewsControlButtonClicked;
int libCOUI_gv_aF_CS_NewsDialogPanel;
int libCOUI_gv_aF_CS_AllyPrestigeDialog;
int libCOUI_gv_uT_CommandsButton;
int libCOUI_gv_playAmonButton;
int libCOUI_gv_playRandomButton;
int libCOUI_gv_amonPlayersCount;
int[9] libCOUI_gv_amonPlayers;
int libCOUI_gv_randomPlayersCount;
int[9] libCOUI_gv_randomPlayers;
int[16] libCOUI_gv_chosenTeam;
libCOUI_gs_CommanderOption[libCOUI_gv_cUC_COMMSELECTMAX + 1] libCOUI_gv_commanderOption;
libCOUI_gs_CommanderOption[9] libCOUI_gv_amonOption;
libCOUI_gs_CommanderOption[9] libCOUI_gv_randomOption;
int libCOUI_gv_cU_CommanderSelectionPanel;
string[libCOUI_gv_cUC_COMMSELECTMAX + 1] libCOUI_gv_cU_CommanderList;
int libCOUI_gv_uT_PrestigeIndex;
int libCOUI_gv_uT_AllyMasteryButton;
int libCOUI_gv_vU_DetailsContainer;
int libCOUI_gv_vU_DetailsTabControl;
int libCOUI_gv_vU_DetailsTabInfoButton;
int libCOUI_gv_vU_DetailsTabUnitsButton;
int libCOUI_gv_vU_DetailsTabResearchButton;
int libCOUI_gv_vU_DetailsBackground;
int libCOUI_gv_vU_DetailsInfoContainer;
int libCOUI_gv_vU_DetailsUnitsContainer;
int libCOUI_gv_vU_DetailsResearchContainer;
int libCOUI_gv_cU_CommanderDialog;
int libCOUI_gv_cU_CommanderPanel;
int libCOUI_gv_cU_CommanderReadyButton;
int libCOUI_gv_cU_CommanderReadyCheckMark;
int libCOUI_gv_cU_CommanderReadyLabelSelf;
int libCOUI_gv_cU_CommanderReadyLabelAlly;
int libCOUI_gv_cU_CommanderSelect_RefCount;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_CommanderSelect_PlayerReady;
int libCOUI_gv_cU_CommanderInfoPanel;
int libCOUI_gv_cU_CommanderSelectedNameSelf;
int libCOUI_gv_cU_CommanderAccountNameSelf;
int libCOUI_gv_cU_CommanderSelectedPrestigeSelf;
int libCOUI_gv_cU_CommanderLevelLabelSelf;
int libCOUI_gv_cU_CommanderMasteryLabelSelf;
libCOUI_gs_UnitIcon[libCOUI_gv_cUC_UNITSMAXCOUNT + 1] libCOUI_gv_cU_CommanderAbilitiesButtons;
libCOUI_gs_UnitIcon[libCOUI_gv_cUC_UNITSMAXCOUNT + 1] libCOUI_gv_cU_CommanderUnitsButtons;
libCOUI_gs_UnitIcon[libCOUI_gv_cUC_UNITSMAXCOUNT + 1] libCOUI_gv_cU_CommanderUpgradesButtons;
int libCOUI_gv_cU_CommanderLevelUpButton;
int libCOUI_gv_cU_CommanderLevelDownButton;
int libCOUI_gv_cU_CommanderPanelUpgrade;
int libCOUI_gv_cU_CommanderMasteryButton;
int libCOUI_gv_cU_CommanderMasteryCheckbox;
libCOUI_gs_UnitIcon[libCOOC_gv_cCC_PLAYERPRESTIGEMAXRANK + 1] libCOUI_gv_cU_CommanderPrestigesButtons;
int libCOUI_gv_aF_CS_AllyPrestigeButton;
int libCOUI_gv_cU_MasteryDialog;
int libCOUI_gv_cU_MasteryPanel;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryItemPanels;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryNameLabels;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryPointLabels;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryValueLabels;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryPlusButtons;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1] libCOUI_gv_cU_MasteryMinusButtons;
int[libCOOC_gv_cCC_MASTERY_CATEGORIES + 1] libCOUI_gv_cU_MasteryCategoryPoints;
int libCOUI_gv_cU_MasteryAcceptButton;
int libCOUI_gv_cU_MasteryResetButton;
int libCOUI_gv_cU_MasteryLevelUpButton;
int libCOUI_gv_cU_MasteryLevelDownButton;
int libCOUI_gv_cU_MasteryLevelLabel;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryLevelCurrent;
int[libCOOC_gv_cCC_MASTERY_CATEGORIES + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryCategoryPointsLeft;
int[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryUpgradePointsSpent;
string[libCOOC_gv_cCC_MASTERIES_PER_COMMANDER + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryUpgrades;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MasteryShiftPressed;
int libCOUI_gv_cU_MasteryRefCount;
int libCOUI_gv_vU_GameModePulldown;
int libCOUI_gv_vU_CommanderDifficultyPulldown;
int libCOUI_gv_vU_CommanderEnemyFactionPulldown;
string[51] libCOUI_gv_vU_EnemyFactionsList;
int libCOUI_gv_vU_CommanderPanelSettings;
int libCOUI_gv_cU_CommanderMutatorButton;
int libCOUI_gv_cU_CommanderMutatorCountLabel;
int libCOUI_gv_cU_CommanderMutatorChallengePulldown;
string[51] libCOUI_gv_cU_CommanderMutatorChallengeList;
int[9] libCOUI_gv_cU_PlayerPrestigeBrief;
int[9] libCOUI_gv_cU_PlayerPrestigeBriefImage;
int libCOUI_gv_cU_EnemyBrief;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_MinimapAllyViewPing;
bool libCOUI_gv_cU_MinimapAllyViewEnabled;
int libCOUI_gv_cU_ArmyButton;
int libCOUI_gv_cU_ArmyButtonTipPanel;
bool libCOUI_gv_cU_ArmyButtonTipReady;
text libCOUI_gv_cU_BB_Title;
unit libCOUI_gv_cU_BB_Boss;
fixed libCOUI_gv_cU_BB_MaxValue;
fixed libCOUI_gv_cU_BB_CurrentValue;
int libCOUI_gv_cU_BB_HPOldWidth;
int libCOUI_gv_cU_BB_Style;
int libCOUI_gv_cU_BB_Panel;
int libCOUI_gv_cU_BB_TitleLabel;
int libCOUI_gv_cU_BB_HpLabel;
int libCOUI_gv_cU_BB_HpFullImage;
int libCOUI_gv_cU_BB_HpCurrentImage;
int libCOUI_gv_cU_BB_HpBackground;
int libCOUI_gv_cU_BB_HpBackground2;
int libCOUI_gv_cU_BB_BossBG;
int libCOUI_gv_cU_BB_ObjectiveBG;
fixed[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroReviveTimer;
fixed libCOUI_gv_cU_HeroCooldownTime;
unit[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroUnit;
int[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroType;
string[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroIcon;
int[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroPositionX;
int[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroPositionY;
bool[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_HeroShowLevel;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1][libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroExists;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroPanel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogBorderImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogBorderImageNoEnergy;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogBorderImageAll;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogIconImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogCooldownImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogDamageTakenImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogDamageTakenLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogNameLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogLevelLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogHealthBarImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogHealthBarBackground;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogShieldBarImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogShieldBarBackground;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogEnergyBarImage;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogEnergyBarBackground;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogHealthLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogEnergyLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogShieldLabel;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogButton;
int[libCOUI_gv_cUC_HeroMaxCount + 1] libCOUI_gv_cU_HeroDialogLevelBox;
fixed[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_VoidHeroUIDamageTimer;
bool[libCOUI_gv_cUC_HeroMaxCount + 1][libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_VoidHeroUIRevivable;
int libCOUI_gv_cU_HeroAutomaticIndex;
bool libCOUI_gv_cU_HealthWatchFlashing;
int libCOUI_gv_cU_HealthWatchDialog;
int libCOUI_gv_cU_HealthWatchImage;
fixed libCOUI_gv_cU_HealthWatchLastHP;
sound libCOUI_gv_cU_HealthWatchSoundStart;
sound libCOUI_gv_cU_HealthWatchSoundHeartbeat;
sound libCOUI_gv_cU_HealthWatchSoundBreath;
unit libCOUI_gv_cU_HealthWatchUnit;
int libCOUI_gv_cU_MissionUIContainer;
int libCOUI_gv_cU_ObjectivePanel;
int libCOUI_gv_cU_ProgressBarPanel;
int libCOUI_gv_cU_ProgressBarLabelTitle;
int libCOUI_gv_cU_ProgressBarLabelBarLeft;
int libCOUI_gv_cU_ProgressBarImageBar;
int libCOUI_gv_cU_ProgressBarMax;
int libCOUI_gv_cU_ProgressBarMin;
int libCOUI_gv_cU_ProgressBarProgress;
bool libCOUI_gv_cU_ProgressBarShowing;
int libCOUI_gv_pUC_ProgressBarWidth;
int libCOUI_gv_pUC_ProgressBarHeight;
int libCOUI_gv_cU_TimerWindowHighlightFrame;
fixed libCOUI_gv_cU_TimerWindowHighlightDuration;
fixed libCOUI_gv_cU_TimerWindowDangerThreshold;
bool libCOUI_gv_cU_TimerWindowInDanger;
timer libCOUI_gv_cU_TimerWindowTimer;
int libCOUI_gv_cU_TimerWindow;
int[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1] libCOUI_gv_cU_WaveTimerWindows;
timer[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1] libCOUI_gv_cU_WaveTimerWindowTimers;
int[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1] libCOUI_gv_cU_WaveTimerWindowTitle;
int[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1] libCOUI_gv_cU_WaveTimerWindowTime;
int[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1][libCOUI_gv_cUC_WAVETIMERUNITMAX + 1] libCOUI_gv_cU_WaveTimerWindowIcon;
string[libCOUI_gv_cUC_WAVETIMERWINDOWMAX + 1][libCOUI_gv_cUC_WAVETIMERUNITMAX + 1] libCOUI_gv_cU_WaveTimerWindowImage;
int libCOUI_gv_cU_WaveTimerActiveCount;
int libCOUI_gv_cU_WaveTimerWindowLast;
int libCOUI_gv_cU_FanfareFlash;
int libCOUI_gv_cU_FanfareCloseButton;
int libCOUI_gv_cU_FanfareConvertToReplayButton;
int[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_FanfareResult;
bool[libCOOC_gv_cCC_MAXPLAYERS + 1] libCOUI_gv_cU_FanfareShown;
int libCOUI_gv_cU_FanfarePanel;
int libCOUI_gv_cU_FanfareDialog;
bool libCOUI_gv_cU_FanfareTransmissionPlayed;
int libCOUI_gv_cU_ScoreDialog;
int libCOUI_gv_cU_ScorePanel;
int libCOUI_gv_cU_ScoreTitleLabel;
int libCOUI_gv_cU_ScoreContinueButton;
int[4] libCOUI_gv_cU_ScoreCategoryTitleLabel;
int[4] libCOUI_gv_cU_ScoreCategoryValueLabel;
int libCOUI_gv_cU_ScoreTotalValueLabel;
int libCOUI_gv_aF_ScoreButton;
int libCOUI_gv_aF_Score_KillGraph;
int[3] libCOUI_gv_aF_Score_PieCharts;
bool[3] libCOUI_gv_aF_Score_GraphVisible;
int[3] libCOUI_gv_aF_Score_FinalButton;
int[3] libCOUI_gv_aF_Score_FinalButtonLabel;
int libCOUI_gv_aF_KillNumbers;
fixed libCOUI_gv_aF_MissionTime;
playergroup libCOUI_gv_aF_SlimUI_PlayerGroup;
int libCOUI_gv_leaderboardBonusScoreFinal2;
int libCOUI_gv_leaderboardBonusScoreFinal;
int libCOUI_gv_leaderboardTimeScore;
bool libCOUI_gv_cU_DebugMovieCaptureMode;

// Function Declarations
int libCOUI_gf_HookUpDialogItemandshowforplayers (string lp_name, int lp_type, int lp_parent, playergroup lp_players);
void libCOUI_gf_UpdateMapSelection (int lp_player, int lp_mapIndex);
void libCOUI_gf_CreateFactionsDialog ();
void libCOUI_gf_ShowHideWorldCover (bool lp_showHide, fixed lp_transparency, int lp_player);
void libCOUI_gf_AF_CS_NewsCreate ();
void libCOUI_gf_AF_CS_CommanderCutscenes ();
void libCOUI_gf_AF_CS_MiraDialogCreate ();
void libCOUI_gf_CreateGameBriefingRoom ();
void libCOUI_gf_CreateCommandersList ();
void libCOUI_gf_SetFreeCommander (int lp_player, string lp_commander);
playergroup libCOUI_gf_GetPlayingPlayers ();
void libCOUI_gf_UpdateCommandersList ();
void libCOUI_gf_CU_CommanderSelect (int lp_player, string lp_chosenCommander);
void libCOUI_gf_UpdatePlayerCommander (int lp_player);
void libCOUI_gf_CU_CommanderClosed (trigger t);
void libCOUI_gf_CU_CommanderPlayerReadySet (int lp_player, bool lp_ready);
void libCOUI_gf_VU_Ready ();
void libCOUI_gf_UT_ChangeAllyPrestige ();
string libCOUI_gf_CC_CommanderPrestigeIndexFace3 (string lp_commander, int lp_index);
text libCOUI_gf_CC_CommanderPrestigeIndexFace2 (string lp_commander, int lp_index);
void libCOUI_gf_CU_PrestigeUpdate2 (int lp_player);
void libCOUI_gf_CU_PrestigeUpdate3 (int lp_player);
string libCOUI_gf_RandomCommander ();
void libCOUI_gf_CU_MasteryDisplay (int lp_player);
void libCOUI_gf_CU_MasteryCreate ();
void libCOUI_gf_CU_MasteryUpdateData (int lp_player);
void libCOUI_gf_CU_MasteryInitFromData (int lp_player);
void libCOUI_gf_CU_MasteryClose (int lp_player);
void libCOUI_gf_CU_MasteryUpdate (int lp_player);
void libCOUI_gf_CU_MasteryUpdatePoints (int lp_player);
void libCOUI_gf_CU_CommanderUpdatePrestigeLabels (int lp_player);
text libCOUI_gf_GetPlayerPrestigeName (int lp_player);
void libCOUI_gf_CU_PrestigeUpdate (int lp_player);
void libCOUI_gf_CU_PrestigeSelect (int lp_player, int lp_index);
string libCOUI_gf_CC_CommanderPrestigeIndexFace5 (string lp_commander, int lp_index);
string libCOUI_gf_CC_CommanderPrestigeIndexFace4 (string lp_commander, int lp_index);
void libCOUI_gf_SetGameMode (int lp_gamemode);
void libCOUI_gf_UpdateGameModeList ();
void libCOUI_gf_SetDifficulty (int lp_difficulty);
void libCOUI_gf_UpdateDifficultiesList ();
void libCOUI_gf_VU_UpdateEnemyFactionsList ();
void libCOUI_gf_VU_SetEnemyFaction (string lp_faction);
text libCOUI_gf_CU_PrestigeBriefFormatTooltip (int lp_player);
void libCOUI_gf_CU_PrestigeBriefInit ();
void libCOUI_gf_CU_PrestigeBriefReveal ();
void libCOUI_gf_CU_EnemyBriefInit (string lp_aIPersonality);
void libCOUI_gf_CU_EnemyBriefShowHide (bool lp_showHide);
void libCOUI_gf_CU_MinimapAllyViewInit ();
void libCOUI_gf_ToggleAllyMinimapFrustrum (bool lp_enabled);
void libCOUI_gf_DisplayArmyButton (bool lp_doDoNot);
int libCOUI_gf_CU_BB_HPBarCurrentWidth ();
text libCOUI_gf_CU_BB_HPBarFormatLabel ();
void libCOUI_gf_CU_BB_HPBarChange ();
void libCOUI_gf_DisplaySingularBossBarVoidCampaign (string lp_portrait, text lp_title, int lp_max);
void libCOUI_gf_SetSingularBossBarMaximumValueVoidCampaign (int lp_max, bool lp_refresh);
void libCOUI_gf_SetSingularBossBarCurrentValueVoidCampaign (int lp_current, bool lp_refresh);
void libCOUI_gf_SetSingularBossBarBossVoidCampaign (unit lp_boss, bool lp_refresh);
void libCOUI_gf_ShowHideSingularBossBarVoidCampaign (bool lp_showHide);
void libCOUI_gf_RefreshSingularBossBarVoidCampaign ();
void libCOUI_gf_SetSingularBossBarColor (color lp_color);
void libCOUI_gf_SetSingularBossBarTitleColor (color lp_color);
void libCOUI_gf_SetSingularBossBarStyle (int lp_style);
void libCOUI_gf_SetHeroPanelUnit (int lp_index, unit lp_heroUnit, int lp_player);
void libCOUI_gf_SetHeroPanelUnitOverride (int lp_index, unit lp_heroUnit, int lp_player);
void libCOUI_gf_CU_ShowHideHeroPanel (bool lp_showHide, int lp_index);
void libCOUI_gf_CU_CreateHeroPanel (int lp_index);
int libCOUI_gf_CU_HeroTypeFromUnitType (string lp_unitType);
string libCOUI_gf_CU_HeroIcon (int lp_heroType, unit lp_heroUnit);
void libCOUI_gf_CU_UpdateHeroPanel (int lp_index, int lp_player);
string libCOUI_gf_CU_PresetToHeroGameLink (int lp_championPreset);
bool libCOUI_gf_CU_ChampionHasShields (int lp_heroType);
bool libCOUI_gf_CU_ChampionHasShields2 (int lp_heroType);
void libCOUI_gf_EnableLowHealthWarning (unit lp_watchedUnit);
void libCOUI_gf_CU_HealthWatchCreate ();
void libCOUI_gf_CM_StopHeroLowHPSound ();
void libCOUI_gf_CU_UpdateObjectivePanel ();
void libCOUI_gf_DisplayProgressBar (text lp_title, int lp_min, int lp_max);
void libCOUI_gf_SetProgressBarTitle (text lp_title);
void libCOUI_gf_SetProgressBarValueRange (int lp_min, int lp_max);
void libCOUI_gf_SetProgressBarLabel (text lp_label);
void libCOUI_gf_SetProgressBarProgress (int lp_progress);
void libCOUI_gf_SetProgressBarColor (color lp_color);
void libCOUI_gf_ShowHideProgressBar (bool lp_showHide);
void libCOUI_gf_CU_UpdateProgressBar ();
color libCOUI_gf_GetProgressBarColorCampaign ();
void libCOUI_gf_DisplayProgressBarUnitOld (unit lp_unit, int lp_minValue, int lp_maxValue, text lp_labelText, int lp_offsetX, int lp_offsetY, string lp_attachment);
void libCOUI_gf_DestroyProgressBarUnitOld (unit lp_unit);
void libCOUI_gf_SetProgressBarProgressUnitOld (unit lp_unit, int lp_value);
void libCOUI_gf_MoveProgressBarUnitOld (unit lp_unit, int lp_offsetX, int lp_offsetY);
void libCOUI_gf_SetProgresBarTitleUnitOld (unit lp_unit, text lp_titleText);
void libCOUI_gf_SetProgressBarValueRangeUnitOld (unit lp_unit, int lp_minValue, int lp_maxValue);
void libCOUI_gf_ShowHideProgressBarUnitOld (unit lp_unit, bool lp_showHide);
void libCOUI_gf_CU_UpdateProgressBarUnitOld (unit lp_unit);
string libCOUI_gf_CU_ProgressBarUnit_DataNameOld (unit lp_unit, int lp_type);
string libCOUI_gf_CU_ProgressBarUnit_DialogNameOld (unit lp_unit, int lp_type);
void libCOUI_gf_DisplayUnitProgressBar (unit lp_unit, text lp_title, int lp_minValue, int lp_maxValue);
void libCOUI_gf_SetUnitProgressBarIsWideBar (unit lp_unit, bool lp_isWideBar);
void libCOUI_gf_SetUnitProgressBarProgress (unit lp_unit, int lp_value);
void libCOUI_gf_SetUnitProgresBarTitle (unit lp_unit, text lp_titleText);
void libCOUI_gf_SetUnitProgressBarProgress2 (unit lp_unit, int lp_value);
void libCOUI_gf_SetUnitProgressBarValueRange (unit lp_unit, int lp_minValue, int lp_maxValue);
void libCOUI_gf_ShowHideUnitProgressBar (unit lp_unit, bool lp_showHide);
void libCOUI_gf_ShowHideUnitProgressBar2 (unit lp_unit, bool lp_showHide);
void libCOUI_gf_CU_UpdateUnitProgressBar (unit lp_unit);
string libCOUI_gf_CU_UnitProgressBar_Data (unit lp_unit, int lp_type);
string libCOUI_gf_CU_UnitProgressBar_Data2 (unit lp_unit);
string libCOUI_gf_CU_UnitProgressBar_IsWideBarString (unit lp_unit);
string libCOUI_gf_CU_UnitProgressBar_Dialog (unit lp_unit, int lp_type);
void libCOUI_gf_TimerWindowCreate (timer lp_timer, text lp_title, bool lp_visible, bool lp_elapsed);
void libCOUI_gf_SetTimerForTimerWindowCampaign (int lp_window, timer lp_timer);
void libCOUI_gf_RepositionTimerWindow (int lp_timerWindow);
void libCOUI_gf_FlashTimerWindow (fixed lp_duration, bool lp_waitOption);
void libCOUI_gf_SetTimerWindowDangerThreshold (fixed lp_thresholdTime);
void libCOUI_gf_CU_AddTip (text lp_tipName, int lp_tipType, text lp_tipDescription, text lp_tipAlertText, string lp_tipIcon, playergroup lp_players);
void libCOUI_gf_CreateWaveTimerWindow (timer lp_timer, text lp_title, string lp_icon);
void libCOUI_gf_DestroyWaveTimerWindow (int lp_window);
void libCOUI_gf_SetWaveTimerWindowIcon (int lp_window, string lp_icon, int lp_slot);
void libCOUI_gf_SetWaveTimerWindowIconTooltip (int lp_window, text lp_tooltip, int lp_slot);
void libCOUI_gf_CU_WaveTimerWindowCreateAll ();
int libCOUI_gf_LastCreatedWaveTimerWindow ();
int libCOUI_gf_CU_WaveTimerWindowIndexFromID (int lp_waveID);
string libCOUI_gf_CU_WaveTimerWindowIndexKey (int lp_waveID);
void libCOUI_gf_CU_FanfareCreate ();
void libCOUI_gf_CU_FanfareDisplay (int lp_result, int lp_player);
void libCOUI_gf_CU_FanfareTransmission ();
void libCOUI_gf_CU_ScoreCreate ();
void libCOUI_gf_CU_ScoreDisplay (int lp_player, int lp_result);
void libCOUI_gf_CU_ScoreUpdate (int lp_player, int lp_result);
void libCOUI_gf_CU_ScoreClose (int lp_player);
int libCOUI_gf_CU_ScoreTriggeringPlayer ();
void libCOUI_gf_CU_ScoreClosed (trigger t);
void libCOUI_gf_CU_HelpInit ();
void libCOUI_gf_CU_HelpSetupGeneralTips ();
void libCOUI_gf_CU_HelpSetupMutatorTips ();
text libCOUI_gf_CU_PrestigeBriefFormatTooltip2 (int lp_player);
void libCOUI_gf_AF_MutatorIconsCreate (int lp_pDialog);
void libCOUI_gf_AF_MasteryInfoCreate (int lp_pDialog, int lp_pPlayer);
string libCOUI_gf_HybridMajor ();
string libCOUI_gf_HybridMinor ();

// Trigger Declarations
trigger libCOUI_gt_AnnounceMessage;
trigger libCOUI_gt_MapListslectionChanged;
trigger libCOUI_gt_MapButtonClicked;
trigger libCOUI_gt_MissionsButtonClicked;
trigger libCOUI_gt_StartMission;
trigger libCOUI_gt_CreateMissionsDialog;
trigger libCOUI_gt_FactionButtonClicked;
trigger libCOUI_gt_AF_CS_CommanderSelected;
trigger libCOUI_gt_AF_CS_NewsControlButtonClicked;
trigger libCOUI_gt_UT_CommandsButtonClicked;
trigger libCOUI_gt_CU_PlayerLeftInLobby;
trigger libCOUI_gt_CommanderButtonClicked;
trigger libCOUI_gt_UT_PrestigeAlly;
trigger libCOUI_gt_UT_CommanderClicked;
trigger libCOUI_gt_CU_CommanderLevelUpClicked;
trigger libCOUI_gt_CU_CommanderLevelDownClicked;
trigger libCOUI_gt_CU_CommanderMutatorChallengeSelected;
trigger libCOUI_gt_AF_CS_AllyPrestigeChanged;
trigger libCOUI_gt_UT_AllyMasteryButtonClicked;
trigger libCOUI_gt_CU_CommanderMasteryClicked;
trigger libCOUI_gt_CU_CommanderMasteryCheckboxToggle;
trigger libCOUI_gt_ReadyButtonClicked;
trigger libCOUI_gt_CU_CommandeAllyLeft;
trigger libCOUI_gt_CU_MasteryShiftTrackDown;
trigger libCOUI_gt_CU_MasteryShiftTrackUp;
trigger libCOUI_gt_CU_MasteryLevelUpPressed;
trigger libCOUI_gt_CU_MasteryLevelDownPressed;
trigger libCOUI_gt_CU_MasteryItemPlusPressed;
trigger libCOUI_gt_CU_MasteryItemMinusPressed;
trigger libCOUI_gt_CU_MasteryResetPressed;
trigger libCOUI_gt_CU_MasteryAcceptPressed;
trigger libCOUI_gt_CU_PrestigeButtonClicked;
trigger libCOUI_gt_GameModePulldownUsed;
trigger libCOUI_gt_DifficultyPulldownUsed;
trigger libCOUI_gt_VU_EnemyFactionChanged;
trigger libCOUI_gt_CU_MinimapAllyViewUpdate;
trigger libCOUI_gt_CU_MinimapAllyPlayerLeaves;
trigger libCOUI_gt_CU_MinimapAllyViewCamera;
trigger libCOUI_gt_CU_FlashArmyButtonHelpTip;
trigger libCOUI_gt_CU_ArmyButtonUsed;
trigger libCOUI_gt_CS_ArmyButtonMissionInit;
trigger libCOUI_gt_CU_BB_BossHPChanged;
trigger libCOUI_gt_CU_HeroPanelUpdate;
trigger libCOUI_gt_CU_HeroUnitDamaged;
trigger libCOUI_gt_CU_HeroUnitVitalChange;
trigger libCOUI_gt_CU_HeroMouseHoverText;
trigger libCOUI_gt_CU_HealthWatchLifeCheck;
trigger libCOUI_gt_CU_HealthWatchUnitDies;
trigger libCOUI_gt_CU_HealthWatchFlash;
trigger libCOUI_gt_CU_HealthWatchStartSound;
trigger libCOUI_gt_CU_HealthWatchHeartLoop;
trigger libCOUI_gt_CU_HealthWatchBreathLoop;
trigger libCOUI_gt_CU_TimerWindowFlash;
trigger libCOUI_gt_CU_TimerWindowMoveForBossBar;
trigger libCOUI_gt_CU_TimerWindowThresholdCrossed;
trigger libCOUI_gt_CU_WaveTimerWindowUpdateTime;
trigger libCOUI_gt_CU_ScoreClosed;
trigger libCOUI_gt_CU_FanfareDismissed;
trigger libCOUI_gt_AF_Score;
trigger libCOUI_gt_AF_Score_GraphsandCharts;
trigger libCOUI_gt_AF_Score_SwitchButtonCreate;
trigger libCOUI_gt_AF_Score_MissionsButtonCreate;
trigger libCOUI_gt_AF_Score_QuitButtonCreate;
trigger libCOUI_gt_AF_Score_FinalButtonClicked;
trigger libCOUI_gt_AF_MissionEnds;
trigger libCOUI_gt_AF_SlimUI;
trigger libCOUI_gt_AF_SlimUI_Delayed;
trigger libCOUI_gt_CU_DebugTogSoA;
trigger libCOUI_gt_CU_DebugScreenmode;
trigger libCOUI_gt_CU_DebugCinMode;
trigger libCOUI_gt_CU_DebugRandomMutationSelect;
trigger libCOUI_gt_CU_DebugMutatorSelect;
trigger libCOUI_gt_CU_DebugMovieCaptureModeToggle;
trigger libCOUI_gt_CU_DebugMovieCaptureModeSuppressCC;
trigger libCOUI_gt_CU_DebugMovieCaptureModeSupressUnits;

// Library Initialization
void libCOUI_InitVariables ();

