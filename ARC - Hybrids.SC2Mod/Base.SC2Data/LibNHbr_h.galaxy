include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Network Hybrid Race
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libNHbr_ge__UnitDataType_Actor = 0;
const int libNHbr_ge__UnitDataType_Integer = 1;
const int libNHbr_ge__UnitDataType_Ping = 2;
const int libNHbr_ge__UnitDataType_Point = 3;
const int libNHbr_ge__UnitDataType_Region = 4;
const int libNHbr_ge__UnitDataType_TextTag = 5;
const int libNHbr_ge__UnitDataType_Unit = 6;
const int libNHbr_ge__UnitDataType_UnitGroup = 7;
const int libNHbr_ge_CustomValueIndexes_TimeScaleEnergyUsage = 0;
const int libNHbr_ge_CustomValueIndexes_TimeScaleDrainingEnergy = 1;
const int libNHbr_ge_CustomValueIndexes_ProtectionSpellArmor = 2;
const int libNHbr_ge_HybridNavigatorCargoUI_Size1 = 0;
const int libNHbr_ge_HybridNavigatorCargoUI_Size2 = 1;
const int libNHbr_ge_HybridNavigatorCargoUI_Size4 = 2;
const int libNHbr_ge_HybridNavigatorCargoUI_Size8 = 3;

// Constants
const int libNHbr_gv_mAX_PLAYERS = 15;
const int libNHbr_gv_hybridBuildControllerMaxOrderCount_C = 31;
const int libNHbr_gv_hybridNetworkMaximumPowerSourcesInNetwork = 12;
const int libNHbr_gv_hybridNetworkPowerSourceUnitTypeMaxCount_C = 3;
const fixed libNHbr_gv_hybridTeleportConstructionTime = 14.0;
const int libNHbr_gv_hybridTimeScaleBuffMaxScale_C = 100;
const fixed libNHbr_gv_hybridTimeScaleBuffMaximumEnergyPerUsage_Structure_C = 20.0;
const fixed libNHbr_gv_hybridTimeScaleBuffMaximumEnergyPerUsage_Minion_C = 40.0;
const fixed libNHbr_gv_hybridTimeScaleBuffMaximumTimeScaleBonus_C = 1.0;

// Variable Declarations
fixed libNHbr_gv_hybridBuildControllerRange;
order[libNHbr_gv_hybridBuildControllerMaxOrderCount_C + 1] libNHbr_gv_dEBUGOrderListBefore;
order[libNHbr_gv_hybridBuildControllerMaxOrderCount_C + 1] libNHbr_gv_dEBUGOrderListAfter;
order libNHbr_gv_dEBUGFirstOrder;
int[libNHbr_gv_mAX_PLAYERS + 1] libNHbr_gv_hybridNetworkNewCurrentChargedAmount;
unitgroup[libNHbr_gv_mAX_PLAYERS + 1] libNHbr_gv_hybridNetworkNewPowerSourceUnitGroup;
string[libNHbr_gv_hybridNetworkPowerSourceUnitTypeMaxCount_C + 1] libNHbr_gv_hybridNetworkPowerSourceUnitType;
int[libNHbr_gv_mAX_PLAYERS + 1] libNHbr_gv_hybridNetworkNewCaseControllerStasisCell;
int[libNHbr_gv_mAX_PLAYERS + 1] libNHbr_gv_hybridNetworkNewCaseControllerProcessingCore;
int[libNHbr_gv_mAX_PLAYERS + 1] libNHbr_gv_hybridNetworkNewCaseControllerCrystallicShrine;
unitgroup[libNHbr_gv_mAX_PLAYERS + 1] libNHbr_gv_hybridTeleportUnitGroup;
string[libNHbr_gv_hybridTimeScaleBuffMaxScale_C + 1] libNHbr_gv_hybridTimeScaleBuff;

// Function Declarations
string libNHbr_gf__UnitDataName (int lp_type, unit lp_unit, int lp_index);
void libNHbr_gf_StoreActorForUnit (unit lp_unit, int lp_index, actor lp_actor);
actor libNHbr_gf_ActorStoredForUnit (unit lp_unit, int lp_index);
void libNHbr_gf_StoreTextTagForUnit (unit lp_unit, int lp_index, int lp_textTag);
int libNHbr_gf_TextTagStoredForUnit (unit lp_unit, int lp_index);
void libNHbr_gf_StorePointForUnit (unit lp_unit, int lp_index, point lp_point);
point libNHbr_gf_PointStoredForUnit (unit lp_unit, int lp_index);
void libNHbr_gf_StoreRegionForUnit (unit lp_unit, int lp_index, region lp_region);
region libNHbr_gf_RegionStoredForUnit (unit lp_unit, int lp_index);
void libNHbr_gf_StorePingForUnit (unit lp_unit, int lp_index, int lp_ping);
int libNHbr_gf_PingStoredForUnit (unit lp_unit, int lp_index);
void libNHbr_gf_StoreIntegerForUnit (unit lp_unit, int lp_index, int lp_value);
int libNHbr_gf_IntegerStoredForUnit (unit lp_unit, int lp_index);
void libNHbr_gf_StoreUnitForUnit (unit lp_unit, int lp_index, unit lp_value);
unit libNHbr_gf_UnitStoredForUnit (unit lp_unit, int lp_index);
void libNHbr_gf_StoreUnitGroupForUnit (unit lp_unit, int lp_index, unitgroup lp_value);
unitgroup libNHbr_gf_UnitGroupStoredForUnit (unit lp_unit, int lp_index);
void libNHbr_gf_RemoveDataFromUnit (string lp__UnitDataName, unit lp_unit);
void libNHbr_gf_UpgradeButtontoButtonForPlayer (string lp_sourceButton, string lp_targetButton, int lp_player);
bool libNHbr_gf_RunValidatorOnUnit (string lp_validator, unit lp_sourceUnit, unit lp_targetUnit);
int libNHbr_gf_CustomValueIndex (int lp_customValue);
bool libNHbr_gf_HybridBuildControllerIsBuildOrder (order lp_order);
bool libNHbr_gf_HybridBuildControllerIsBuildOrderMain (order lp_order);
abilcmd libNHbr_gf_HybridBuildControllerReturnMainBuildAbilityCommand (order lp_order);
abilcmd libNHbr_gf_HybridBuildControllerReturnDefaultBuildAbilityCommand (order lp_order);
int libNHbr_gf_HybridBuildControllerClosestMainBuildAbilityCommandIndex (unit lp_minion);
fixed libNHbr_gf_HybridBuildControllerReturnBuildUnitRadius (order lp_order);
void libNHbr_gf_HybridTimeScaleBuffRemoveTimeScaleBuffFromUnit (unit lp_unit);
void libNHbr_gf_HybridTimeScaleBuffAddTimeScaleBuffToUnitFromUnit (unit lp_casterUnit, fixed lp_casterEnergyPerUsage, unit lp_targetUnit);
fixed libNHbr_gf_HybridTimeScaleBuffCalculateEnergyUsageForUnit (unit lp_unit);
fixed libNHbr_gf_HybridTimeScaleBuffBoosterPercentBuff (unit lp_casterUnit, fixed lp_casterEnergyPerUsage);
fixed libNHbr_gf_HybridTimeScaleBuffUnitConstructionTime (unit lp_unit, string lp_ability);
fixed libNHbr_gf_HybridTimeScaleBuffUpgradeResearchTime (string lp_upgrade, string lp_ability);

// Trigger Declarations
trigger libNHbr_gt_InitializeNetworkHybridRace;
trigger libNHbr_gt_HybridBuildController;
trigger libNHbr_gt_HybridNetworkNewCalculate;
trigger libNHbr_gt_HybridNetworkPowerSourceUnitTypeInitialization;
trigger libNHbr_gt_HybridNetworkNewCaseController;
trigger libNHbr_gt_HybridNetworkNewCaseControllerRemoved;
trigger libNHbr_gt_HybridProtectionUpdateArmorDataProperty;
trigger libNHbr_gt_HybridTeleportOverrideTPTime;
trigger libNHbr_gt_HybridTeleportTurnTargetingOrderOn;
trigger libNHbr_gt_HybridTeleportTurnTargetingOrderOff;
trigger libNHbr_gt_HybridTeleportConstructionProgress;
trigger libNHbr_gt_HybridTeleportTransferDamage;
trigger libNHbr_gt_HybridTimeScaleBuffInitialization;
trigger libNHbr_gt_HybridTimeScaleBuffCommonConstructionStarted;
trigger libNHbr_gt_HybridTimeScaleBuffCommonConstructionCompleted;
trigger libNHbr_gt_HybridTimeScaleBuffCommonConstructionCanceled;
trigger libNHbr_gt_HybridTimeScaleBuffMinionConstructionResumed;
trigger libNHbr_gt_HybridTimeScaleBuffMinionConstructionPaused;
trigger libNHbr_gt_HybridTimeScaleBuffStructureTrainingStarted;
trigger libNHbr_gt_HybridTimeScaleBuffStructureTrainingCompleted;
trigger libNHbr_gt_HybridTimeScaleBuffStructureTrainingCancelled;
trigger libNHbr_gt_HybridTimeScaleBuffStructureResearchStarted;
trigger libNHbr_gt_HybridTimeScaleBuffStructureResearchCompleted;
trigger libNHbr_gt_HybridTimeScaleBuffStructureResearchCancelled;
trigger libNHbr_gt_HybridDominatorUpgradeToAdvancedDominator;
trigger libNHbr_gt_HybridReaverUpgradeToAdvancedReaver;
trigger libNHbr_gt_HybridNavigatorCargoUI;
trigger libNHbr_gt_HybridReaverConsumeDNAAutocastOn;
trigger libNHbr_gt_HybridReaverConsumeDNAAutocastOff;
trigger libNHbr_gt_HybridVoidRiftCargoUI;
trigger libNHbr_gt_HybridRemoveConstructLost;

// Library Initialization
void libNHbr_InitVariables ();

